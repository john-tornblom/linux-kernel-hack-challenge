{"name":"Linux-kernel-hack-challenge","tagline":"Contest for hacking the linux kernel to provide real-time characteristics.","body":"Linux Kernel Hack Challenge\r\n===========================\r\nLinux Kernel Hack Challenge is a contest to encourage Linux professionals to solve an execution time measurement problem. The winner solution will be awarded with a flight in a SAAB Gripen simulator including travel to Linköping, and accommodation.\r\nThe task is to provide a Linux kernel modification that gives a more accurate worst-case execution time measurement taking into account cache effects. The winning solution may be used to verify execution time aspects of airborne software.\r\n\r\n### Challenging tasks \r\n* Execute small applications uninterrupted by Linux in a small time-slot.\r\n* Force a cache invalidation/flush at a specific point in time.\r\n\r\n### Requirements\r\n* Linux kernel shall be 2.6.32, PowerPC e500v2.\r\n* Deadline for your solution is 2015-02-28.\r\n\r\n### Prices\r\nA flight in a SAAB Gripen simulator including a trip to Linköping, and accommodation. \r\n\r\n### Benchmarking\r\nBenchmarking is done using acceptance test found in [full specification] (https://github.com/christoffer-nylen/linux-kernel-hack-challenge/raw/master/doc/KernelHackSpecification-1.0.0.docx).\r\n\r\n### The rules\r\nPrize is limited to European residents.\r\nAll submitted solutions must comply with GPL v2 license.\r\nThe winner takes it all!\r\n\r\n### How do I proceed?\r\nCreate a fork of this repo, clone it and initilize the linux submodule (which points at torvalds/linux 2.6.32).\r\n```\r\n$ git clone https://github.com/<your repo>\r\n$ git submodule sync\r\n$ git submodule update --init linux\r\n```\r\n\r\n\r\nWe accept solutions as pull requests to this repo from 2015-02-25 to 2015-02-28.\r\n\r\n\r\n\r\n### ./README.md\r\n* guides to other material\r\n* FAQ for the linux kernel hack challenge\r\n\r\n### ./FAILED_profiling_lib\r\nContains a FAILED attempt of a profiling library that contains the required APIs\r\naccording to header file libprf.h\r\n\r\n### ./FAILED_Linux_kernel_patch_attempt\r\nContains a FAILED attempt to change the Linux kernel scheduling - can be an\r\ninspiration?\r\nUses a kernel module that must be installed to set up the interrupt handling.\r\nL1 invalidation cache for powerPC used here.\r\nNote: This is vital and must be used (powerPC e500v2) to be used by interrupt routine to \r\ninvalidate L1 cache. \r\n\r\n### ./L1_invalidate_Kernel_module\r\nExample of how to Invalidate L1 cache on a powerPC e500v2 architecture.\r\nNote: This is vital and must be used (powerPC) to be used by interrupt routine \r\nto invalidate L1 cache. \r\n\r\n### ./testcase\r\nTest case that may prove the correctness of achieved work. Corresponds to Full \r\nspecification, Acceptance test 6. The principal characteristics of measured values \r\nfor this test when working is found in Powerpoint picture in ./doc/\r\n\r\n### ./linux-2.6.32\r\nconfig file for the linux kernel 2.6.32.\r\n\r\n### ./linux\r\nSubmodule pointing at https://github.com/torvalds/linux/tree/v2.6.32\r\n\r\n### ./doc\r\n* Short version of Linux kernel hack challenge.\r\n* Longer technical specification of task, including Acceptance tests that define \r\n  behaviour of profiling when working.\r\n* PowerPoint picture of expected time usage behaviour for the test case as L1 cache\r\nis invalidated at different points in time from execution start.\r\n\r\n### FAQ\r\n* Q: Who arranges this challenge?\r\n\r\nSaab Aeronautics development department in Linköping, Sweden. \r\nSaab Aeronautics offers advanced airborne systems, related subsystems, \r\nUnmanned Aerial Systems (UAS), aerostructures and services to defense customers \r\nand commercial aerospace industries worldwide. Aeronautics is also responsible for \r\ndevelopment, production, marketing, selling and supporting of the Gripen fighter.\r\n\r\n* Q: Why did you launch this contest?\r\n\r\nThe goal of this contest is to solve a real-time problem. \r\nThe question at hand is whether Linux can be used to measure worst case execution time.\r\n\r\n* Q: What happens when I win?\r\n\r\nThe best proposed solution, will be published on github and the winner will be announced. \r\nSaab contacts the winner with all details for the prize, travel, and accommodation.","google":"UA-56410800-1","note":"Don't delete this file! It's used internally to help with page regeneration."}